<?php

namespace App\Controller;

use App\Model\SalesModel;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use PhpOffice\PhpSpreadsheet\Shared\Date;

//error_reporting(E_ALL);
//ini_set('display_errors', 'On');

//        require_once('vendor/autoload.php');

use PhpOffice\PhpSpreadsheet\Helper\Sample;
use PhpOffice\PhpSpreadsheet\IOFactory;


class Sales extends Table
{
    protected string $tableName = "sale";

    public function __construct()
    {
        parent::__construct();
        $config = include __DIR__ . "/../../config.php";
        $config["table"] = $this->tableName;
        $this->pageSize = $config["page_size"];
        $this->model = new SalesModel($config);

    }

    public function actionShowEdit(): void
    {
        parent::actionShowEdit(); // TODO: Change the autogenerated stub
        $this
            ->view
            ->addData([
                "groupList1" => $this->model->getGroupListUsers(),
                "groupList2" => $this->model->getGroupListCountries(),
                "groupList3" => $this->model->getGroupListProdukt(),
                "groupList4" => $this->model->getGroupListCustomers()
            ])
            ->setTemplate("Sales/add_edit");
    }

    public function actionShowAdd(): void
    {
        parent::actionShowAdd(); // TODO: Change the autogenerated stub
        $this
            ->view
            ->addData([
                "groupList1" => $this->model->getGroupListUsers(),
                "groupList2" => $this->model->getGroupListCountries(),
                "groupList3" => $this->model->getGroupListProdukt(),
                "groupList4" => $this->model->getGroupListCustomers()
            ])
            ->setTemplate("Sales/add_edit");
    }

    public function actionShow(): void
    {
        parent::actionShow(); // TODO: Change the autogenerated stub
        $this->view->setTemplate("Sales/show");
    }

    public function actionAdd(): void
    {
        parent::actionAdd(); // TODO: Change the autogenerated stub
        $this->view->setTemplate("Sales/add_edit");
    }


    public function actionExport(): void
    {

        $getlist = $this->model->getList();
        header("Content-type: application/vnd.ms-excel");
        header("Content-Disposition: attachment; filename=exportfile.xls");

        $spreadsheet = new Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();
        $sheet->setCellValue('A1', 'data');
        $sheet->setCellValue('B1', 'предприятие');
        $sheet->setCellValue('C1', 'Покупатель');
        $sheet->setCellValue('D1', 'Страна');
        $sheet->setCellValue('E1', 'Продукция');
        $sheet->setCellValue('F1', 'Вес, тонн');
        $sheet->setCellValue('G1', 'Стоимость, тыс.долл.');
        $count = 2;

        foreach ($getlist as $row) {
            $sheet->setCellValue('A' . $count, $row['data']);
            $sheet->setCellValue('B' . $count, $row['users_id']);
            $sheet->setCellValue('C' . $count, $row['customers_id']);
            $sheet->setCellValue('D' . $count, $row['countries_id']);
            $sheet->setCellValue('E' . $count, $row['produkt_id1']);
            $sheet->setCellValue('F' . $count, $row['weight']);
            $sheet->setCellValue('G' . $count, $row['cost']);
            $count++;
        }

        $oWriter = IOFactory::createWriter($spreadsheet, 'Xls');
        $oWriter->save('php://output');
    }

}